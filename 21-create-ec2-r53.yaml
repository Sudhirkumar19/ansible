- name: create ec2 and r53 records
  hosts: local
  connection: local
  vars:
      subnet_id: subnet-01f5afca271d3b98f # replace your subnet_id from networking in ansible server created
      sg_id: "sg-0c3b0a147a91f5302"
      ami_id: "ami-09c813fb71547fc4f"
      instances:
          - mysql
          - backend
          - frontend
      zone: daws81s.online
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:
        name: "{{ item }}"
        vpc_subnet_id: "{{ subnet_id}}"
        instance_type: "t3.micro"
        security_group: "{{ sg_id }}"
        image_id: "{{ ami_id }}"
    loop: "{{ instances }}"
    register: ec2_instances # register is the key word to catch the output here

  - name: print the output
    ansible.builtin.debug:
        msg: "{{ ec2_instances }}"
  # private IP R53
  - name: create r53 private records
    amazon.aws.route53:
        state: present
        zone: "{{ zone }}"
        record: "{{ item.item}}.{{zone}}" #mysql.daws81s.online
        type: A
        ttl: 1
        value: "{{ item.instances[0].private_ip_address}}"
        wait: true
        overwrite: true
    loop: "{{ ec2_instances.results }}"
  
  #public IP
  - name: create r53 public records for frontend
    amazon.aws.route53:
        state: present
        zone: "{{ zone }}"
        record: "{{ item.item}}.{{zone}}" #mysql.daws81s.online
        type: A
        ttl: 1
        value: "{{ item.instances[0].public_ip_address}}"
        wait: true
        overwrite: true
    loop: "{{ ec2_instances.results }}"
    when: item == "frontend"
    with_items: "{{ ec2_instances.results }}"